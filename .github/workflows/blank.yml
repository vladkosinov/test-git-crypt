# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  issue_comment:
  issues:
    types: [edited]
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions/github-script@v2
      id: docker-machine-driver-yandex-latest-sha
      with:
        result-encoding: string
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const ref = await github.git.getRef({
              owner: 'yandex-cloud',
              repo: 'docker-machine-driver-yandex',
              ref: 'heads/master'
          });
          
          return ref.data.object.sha;

    - uses: actions/cache@v2
      id: restore-docker-machine-driver-yandex
      with:
        path: ~/go/bin/docker-machine-driver-yandex
        key: ${{ runner.os }}-go-${{ steps.docker-machine-driver-yandex-latest-sha.outputs.result }}

    - name: Install docker-machine-driver-yandex
      run: |
        go get -u github.com/yandex-cloud/docker-machine-driver-yandex
      if: steps.restore-docker-machine-driver-yandex.outputs.cache-hit != 'true'

    - name: Ls go
      run: ls ~/go/bin/;

  Deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'issues' &&
      github.event.issue.number == 1 &&

      contains(github.event.changes.body.from, '- [ ] on/off') &&
      contains(github.event.issue.body, '- [x] on/off') &&

      !contains(github.event.changes.body.from, '- [x] on/off') &&
      !contains(github.event.issue.body, '- [ ] on/off')

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Dump github.event_name
      env:
        CONTEXT: ${{ toJson(github.event_name) }}
      run: echo "$CONTEXT"

    - name: Dump github.event
      env:
        CONTEXT: ${{ toJson(github.event) }}
      run: echo "$CONTEXT"

    - name: Git-Crypt Unlock
      uses: zemuldo/git-crypt-unlock@v2.0
      env: 
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        GPG_KEY_GRIP: ${{ secrets.GPG_KEY_GRIP }}
        GPG_KEY_PASS: ${{ secrets.GPG_KEY_PASS }}

    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo $GITHUB_ACTOR

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: cat secretdir/test.txt
